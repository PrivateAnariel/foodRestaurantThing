{% extends 'base.html.twig' %}

{% block body %}

{{message}}
{{ form_start(form) }}
{{ form_widget(form) }}
{{ form_end(form) }}
{# 
==========================================================
CODE EMPRUNTÉ
Les lignes qui suivent on été insipirées d'un exemple tiré du site : http://symfony.com/doc/current/cookbook/form/form_collections.html#cookbook-form-collections-new-prototype
===========================================================
 #}
<script>
var $collectionHolder;
var index;
// setup an "add a tag" link
var $addItemButton = $('<button id="boutonAjout" disabled> Ajouter un item </button>');

jQuery(document).ready(function() {

	$("button#menu_items_0_confirmer_item").click(function(e) {
    	e.preventDefault();
    	confirmerItem();
    });
    $collectionHolder = $('div#menu_items');

    $collectionHolder.append($addItemButton);

    // count the current form inputs we have (e.g. 2), use that as the new
    // index when inserting a new item (e.g. 2)
    $collectionHolder.data('index', $collectionHolder.find('> div').length);

    $addItemButton.click(function(e) {
    	e.preventDefault();
        // add a new tag form (see next code block)
        $("button#boutonAjout").attr("disabled",true);
        addTagForm($collectionHolder, $addItemButton);
    });
});


function addTagForm($collectionHolder, $addItemButton) {

    // Get the data-prototype explained earlier
    var prototype = $collectionHolder.data('prototype');
    // get the new index
    index = $collectionHolder.data('index');

    // Replace '__name__' in the prototype's HTML to
    // instead be a number based on how many items we have
    var newForm = prototype.replace(/__name__label__/g, index);
    newForm = newForm.replace(/__name__/g, index);

    // increase the index with one for the next item
    $collectionHolder.data('index', index + 1);

    // Display the form in the page, before addItemButton
    $addItemButton.before(newForm);

    $bouton = $("button#menu_items_"+(index)+"_confirmer_item");
    $bouton.click(function(e) {
    	e.preventDefault();
    	confirmerItem();
    });

}
{# 
==========================================================
FIN DU CODE EMPRUNTÉ
===========================================================
 #}
function confirmerItem(){
    var valide = validation();
    if (valide == true){
    	$("button#boutonAjout").removeAttr("disabled");
    	if (index == null){
    		$enfants = $("div#menu_items_0").children();
    		$grandsenfants = $enfants.children();
    	}
    	else {
    		$enfants = $("div#menu_items_"+index).children();
    		$grandsenfants = $enfants.children();
    		}
    	for($i = 0; $i<$grandsenfants.length;$i++){
    		if ($grandsenfants[$i].tagName=="BUTTON"){
    			$grandsenfants[$i].parentNode.removeChild($grandsenfants[$i]);
    		}
    		else{
    			$grandsenfants[$i].readOnly = true;
    		}
    	}
    }
}
function validation() {
    var valide = true;
    $("button#boutonAjout").removeAttr("disabled");
    if (index == null){
        if (document.getElementById("menu_items_0_prix").value == "" || document.getElementById("menu_items_0_nom").value == ""){
            alert("Vous devez inscrire un prix et un nom pour l'item");
            valide = false;
            console.log(document.getElementById("menu_items_0_prix").value);
        }
        if (document.getElementById("menu_items_0_description").value == ""){
            alert("Vous n'avez pas inscrit de description pour l'item");
        }
    }
    else {
         if (document.getElementById("menu_items_"+index+"_prix").value == "" || document.getElementById("menu_items_"+index+"_nom").value == ""){
            alert("Vous devez inscrire un prix et un nom pour l'item");
            valide = false;
        }
        if (document.getElementById("menu_items_"+index+"_description").value == ""){
            alert("Vous n'avez pas inscrit de description pour l'item");
        }
    }
    return valide;
}

</script>
{% endblock %}
